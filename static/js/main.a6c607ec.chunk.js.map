{"version":3,"sources":["components/Card/index.jsx","assets/remove.svg","store/index.js","store/actions.js","store/helpers.js","components/Panel/index.js","components/Button/index.jsx","assets/add.svg","components/AddForm/index.jsx","components/DeleteButton/index.jsx","App.js","index.js"],"names":["Card","children","className","initialState","today","text","id","uuid","tomorrow","store","createStore","state","type","payload","items","window","__REDUX_DEVTOOLS_EXTENSION__","name","onDragEnd","result","newState","getState","prevState","res","newItems","property","zz","Object","keys","prop","push","source","destination","sInd","droppableId","dInd","q","list","startIndex","endIndex","Array","from","splice","removed","reorder","index","i","length","droppableSource","droppableDestination","sourceClone","destClone","move","filter","group","ADD_CARD","titleNumber","columnName","newObj","characters","charactersLength","charAt","Math","floor","random","genName","col","RENAME_TITLE","prevTitle","currentTitle","myState","newColumn","titleToDel","x","obj","Panel","arr","ind","title","useState","setCurrentTitle","dispatch","useDispatch","useEffect","showInput","setShowInput","deleteCard","cardID","cole","od","DELETE_CARD","deleteColumn","DELETE_COLUMN","classNames","onChange","e","target","value","onClick","provided","ref","innerRef","map","item","draggableId","draggableProps","dragHandleProps","src","ClearSvg","alt","placeholder","Button","addCard","AddForm","showForm","setShowForm","setText","textAreaRef","useRef","current","focus","rows","AddSvg","styled","button","DeleteBtn","App","useSelector","style","display","el","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6c607ec.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Card.scss';\r\nconst Card = ({ children }) => {\r\n  return <div className=\"card\">{children}</div>;\r\n};\r\n\r\n\r\nexport default Card;\r\n","export default __webpack_public_path__ + \"static/media/remove.fb4c710b.svg\";","import {applyMiddleware, compose, createStore} from 'redux';\r\nimport {v4 as uuid} from 'uuid'\r\n\r\n\r\nconst initialState = [\r\n  {\r\n    today: [\r\n      { text: 'Take paper',id: uuid() },\r\n      { text: 'Take pen',id: uuid() },\r\n    ],\r\n  },\r\n  {\r\n    tomorrow: [\r\n      { text: 'Eat pizza',id:uuid() },\r\n    ]\r\n  }\r\n]\r\n\r\n\r\nconst data = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case 'ADD_CARD':\r\n      return payload\r\n    case 'MOVE':\r\n      return payload\r\n    case 'MOVE_OUTSIDE':\r\n      return [...state]\r\n    case 'ADD_COLUMN':\r\n      return { ...state,items:[...state.items,[]], };\r\n    case 'RENAME_TITLE':\r\n      return payload\r\n    case 'DELETE_CARD':\r\n      return payload\r\n    case'DELETE_COLUMN':\r\n      return payload\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nconst store = createStore(\r\n    data, initialState,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__({name:'kanban-app'})\r\n);\r\n\r\nexport default store;\r\n","import state from './index';\r\nimport {v4 as uuid} from \"uuid\";\r\nimport {genName,reorder,move} from './helpers'\r\n\r\n\r\nexport const onDragEnd=(result)=> {\r\n  const newState= state.getState()\r\n  const prevState=[...newState]\r\n  const res=[...prevState]\r\n  const newItems = {...newState}\r\n  const items=[]\r\n  for(const property in newItems){\r\n    let zz = newItems[Object.keys(newItems)[property]]\r\n    for(const prop in zz ){\r\n      items.push(zz[prop])\r\n    }\r\n  }\r\n  const { source, destination } = result;\r\n\r\n  // if drop outside the list\r\n  if (!destination) {\r\n    return {\r\n      type:'MOVE_OUTSIDE',\r\n    };\r\n  }\r\n  const sInd = +source.droppableId;\r\n  const dInd = +destination.droppableId;\r\n\r\n  if (sInd === dInd) {\r\n    const q = reorder(items[sInd], source.index, destination.index);\r\n    const newState = [...items];\r\n    newState[sInd] = q;\r\n    let name=''\r\n    for(let i =0;i<newState.length;i++){\r\n      name=Object.keys(prevState[i])[0]\r\n      res[i]= {[name]:newState[i]}\r\n    }\r\n    return{\r\n      type:'MOVE',\r\n      payload:res}\r\n  } else {\r\n    const result = move(items[sInd], items[dInd], source, destination);\r\n    const newState = [...items].filter(group => group.length)\r\n    newState[sInd] = result[sInd];\r\n    newState[dInd] = result[dInd];\r\n    let name=''\r\n    for(let i =0;i<newState.length;i++){\r\n      name=Object.keys(prevState[i])[0]\r\n      res[i]= {[name]:newState[i]}\r\n    }\r\n    return{\r\n      type:'MOVE',\r\n      payload:res\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport const ADD_CARD = (titleNumber,text,columnName) => {\r\n  const newState= state.getState()\r\n  if(typeof titleNumber==='undefined'){\r\n    const newObj={[genName(6)]:[{\r\n        text,\r\n        id:uuid()\r\n      }]}\r\n    return {\r\n      type: 'ADD_CARD',\r\n      payload: [...newState,newObj]\r\n    };\r\n  }\r\n  const col=[...newState[titleNumber][columnName],{text:text,id:uuid()}]\r\n  const result=[...newState]\r\n  const newObj= {\r\n    [columnName]: col\r\n  }\r\n  result.splice(titleNumber,1,newObj )\r\n  return {\r\n    type: 'ADD_CARD',\r\n    payload: [...result],\r\n  };\r\n\r\n};\r\n\r\nexport const RENAME_TITLE=(prevTitle, currentTitle, titleNumber)=>{\r\n  const myState= state.getState()\r\n  const newItems=[...myState]\r\n  const newColumn=newItems[titleNumber][prevTitle]\r\n  // eslint-disable-next-line no-unused-vars\r\n  const { [prevTitle]: remove, ...rest } = newItems\r\n  const titleToDel=newItems[titleNumber]\r\n  const result=newItems.filter((x)=>x!==titleToDel)\r\n  const obj={\r\n    [currentTitle]:newColumn\r\n  }\r\n  result.splice(titleNumber, 0, obj)\r\n  return {\r\n    type:RENAME_TITLE,\r\n    payload:[...result]\r\n  }\r\n}\r\n\r\nexport const DELETE_CARD=(titleNumber,cardID,title)=>{\r\n  const newState= state.getState()\r\n  const newItems=[...newState]\r\n  const cole = newItems[titleNumber]\r\n  const od=cole[Object.keys(cole)[0]].filter((x)=>x.id!==cardID)\r\n  newItems.splice(titleNumber, 1);\r\n  newItems.splice(titleNumber, 0, {[title]:od})\r\n    return {\r\n      type:'DELETE_CARD',\r\n      payload:[...newItems]\r\n    }\r\n}\r\n\r\nexport const DELETE_COLUMN=(titleNumber)=>{\r\n  const newState= state.getState()\r\n  const result = [...newState];\r\n  result.splice(titleNumber,1)\r\n  return {\r\n    type:'DELETE_COLUMN',\r\n    payload:[...result]}\r\n}","export const genName =(length)=> {\r\n    let result = '';\r\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    const  charactersLength = characters.length;\r\n    for ( let i = 0; i < length; i++ ) {\r\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n}\r\n\r\n\r\nexport const reorder = (list, startIndex, endIndex) => {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n    return result;\r\n};\r\n\r\nexport const move = (source, destination, droppableSource, droppableDestination) => {\r\n    const sourceClone = Array.from(source);\r\n    const destClone = Array.from(destination);\r\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n    destClone.splice(droppableDestination.index, 0, removed);\r\n    const result = {};\r\n    result[droppableSource.droppableId] = sourceClone;\r\n    result[droppableDestination.droppableId] = destClone;\r\n    return result;\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport classNames from 'classnames';\r\nimport { Card, AddForm,DeleteBtn } from '../index';\r\nimport './Panel.scss';\r\nimport {Draggable, Droppable} from \"react-beautiful-dnd\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport ClearSvg from '../../assets/remove.svg';\r\nimport {DELETE_CARD, DELETE_COLUMN, RENAME_TITLE} from \"../../store/actions\";\r\n\r\nconst Panel = ({ ind,items,titleNumber,title }) => {\r\n    let arr,prevTitle\r\n    if(typeof items==='undefined'){\r\n        title='new column'\r\n    }else {\r\n        arr=[items[Object.keys(items)]][0]\r\n        prevTitle=title\r\n    }\r\n    const [currentTitle,setCurrentTitle]=useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(()=>{\r\n        setCurrentTitle(title)\r\n    },[title])\r\n    const [showInput,setShowInput]=useState(false)\r\n    const onSpanClick=()=>{\r\n        setShowInput(!showInput)\r\n    }\r\n\r\n    const onChangeTitle=()=>{\r\n        setShowInput(!showInput)\r\n        dispatch(RENAME_TITLE(\r\n                prevTitle,\r\n                currentTitle,\r\n                titleNumber\r\n            ))\r\n    }\r\n\r\n    const setTitle=(e)=>{\r\n        setCurrentTitle(e.target.value)\r\n    }\r\n    const deleteCard=(titleNumber,cardID,title)=>{\r\n        dispatch(DELETE_CARD(titleNumber,cardID,title))\r\n    }\r\n    const deleteColumn=(titleNumber)=>{\r\n        dispatch(DELETE_COLUMN(titleNumber))\r\n    }\r\n\r\n  return (\r\n    <div className={classNames('panel', { 'panel--empty': !items })}>\r\n        {arr&&(\r\n            <>\r\n                <div className='panel__header'>\r\n                    {!showInput?(<>\r\n                        <span onClick={onSpanClick}>{currentTitle}</span>\r\n                            <DeleteBtn\r\n                                onClick={() => {\r\n                                    deleteColumn(titleNumber)}}>\r\n                                delete\r\n                            </DeleteBtn>\r\n                        </>)\r\n\r\n                        :(<>\r\n                        <input type={'text'} onChange={setTitle} value={currentTitle}/>\r\n                        <DeleteBtn onClick={onChangeTitle}>save</DeleteBtn>\r\n                        </>)}\r\n                </div>\r\n                <Droppable key={ind} droppableId={`${ind}`}>\r\n                    {(provided) => (\r\n                        <div ref={provided.innerRef}>\r\n                            {arr.map((item, index) => (\r\n                                <Draggable\r\n                                    key={item.id}\r\n                                    draggableId={item.id}\r\n                                    index={index}\r\n                                >\r\n                                    {(provided) => (\r\n                                        <div\r\n                                            ref={provided.innerRef}\r\n                                            {...provided.draggableProps}\r\n                                            {...provided.dragHandleProps}>\r\n                                            <Card>\r\n                                                {item.text}\r\n                                                <img src={ClearSvg} alt={'remove item'}\r\n                                                    onClick={() => {\r\n                                                        deleteCard(titleNumber,item.id,title)\r\n                                                    }}/>\r\n                                            </Card>\r\n                                        </div>\r\n                                    )}\r\n                                </Draggable>\r\n                            ))}\r\n                            {provided.placeholder}\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n            </>\r\n        )}\r\n        <AddForm columnName={title} titleNumber={titleNumber}/>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Panel;\r\n","import React from 'react';\r\nimport './Button.scss';\r\n\r\nconst Button = ({ children,addCard,text }) => {\r\n  return <div onClick={()=>addCard(text)} className=\"button\">{children}</div>;\r\n};\r\n\r\n\r\n\r\nexport default Button;\r\n","export default __webpack_public_path__ + \"static/media/add.5a391a60.svg\";","import React,{useState,useRef,useEffect} from 'react';\r\nimport {useDispatch} from 'react-redux'\r\nimport './AddForm.scss';\r\nimport { Card,Button } from '../index';\r\nimport AddSvg from '../../assets/add.svg';\r\nimport ClearSvg from '../../assets/remove.svg';\r\nimport {ADD_CARD} from '../../store/actions'\r\n\r\nconst AddForm = ({columnName,titleNumber}) => {\r\n  const dispatch = useDispatch()\r\n  const [showForm, setShowForm] = useState(false)\r\n  const [text,setText] = useState('')\r\n  const textAreaRef = useRef(null)\r\n\r\n  useEffect(() => {\r\n    if(textAreaRef.current){\r\n      textAreaRef.current.focus()\r\n    }\r\n  }, [showForm])\r\n\r\n  const addCard=()=>{\r\n    dispatch(ADD_CARD(titleNumber,text,columnName))\r\n    setText('')\r\n    setShowForm(false)\r\n  }\r\n  return <>\r\n  {showForm?(  <div className=\"add-form\">\r\n    <div className=\"add-form__input\">\r\n      <Card>\r\n        <textarea value={text}\r\n                  onChange={(e)=>{setText(e.target.value)}}\r\n                  placeholder=\"Введите название карточки\"\r\n                  ref={textAreaRef} rows=\"3\" />\r\n      </Card>\r\n      <div  className=\"add-form__button\">\r\n        <Button addCard={addCard} text={text} >Добавить карточку</Button>\r\n        <img  onClick={() => setShowForm(false)} className=\"add-form__button-clear\" src={ClearSvg} alt=\"Clear svg icon\"/>\r\n      </div>\r\n    </div>\r\n  </div>):(\r\n  <div className=\"panel__bottom\">\r\n    <div className=\"panel__bottom-add-btn\" onClick={()=>setShowForm(true)}>\r\n      <img  src={AddSvg}  alt=\"add one card\" />\r\n  <span> Добавить еще одну карточку</span>\r\n  </div>\r\n  </div>)}\r\n</>;\r\n};\r\n\r\n\r\nexport default AddForm;\r\n","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst Button = styled.button`\r\n  background: transparent;\r\n  border-radius: 3px;\r\n  border: 2px solid #807b7b;\r\n  color: #565454;\r\n  margin: 0 1em;\r\n  padding: 0.25em 1em;\r\n\r\n`\r\nconst DeleteBtn = ({ children,onClick }) => {\r\n  return <Button onClick={onClick}>{children}</Button>;\r\n};\r\n\r\n\r\nexport default DeleteBtn;\r\n","import { Panel} from './components/index';\r\nimport {DragDropContext} from \"react-beautiful-dnd\";\r\nimport { useSelector } from 'react-redux';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {onDragEnd} from \"./store/actions\";\r\n\r\nfunction App() {\r\n    const dispatch = useDispatch()\r\n    const onDragEND=(x)=>{\r\n        dispatch(onDragEnd(x))\r\n    }\r\n    const state = useSelector(state=>state)\r\n    const newItems = {...state}\r\n    const items=[]\r\n    for(const property in newItems){\r\n        items.push(newItems[property])\r\n    }\r\n    return (\r\n        <div>\r\n\r\n            <div style={{ display: \"flex\" }}>\r\n                <DragDropContext onDragEnd={onDragEND} >\r\n                    {items.map((el, ind) => (\r\n                        <Panel\r\n                            ind={ind}\r\n                            key={ind}\r\n                            titleNumber={Object.keys(newItems)[ind]}\r\n                            items={items[ind]}\r\n                            title={Object.keys(el)[0]}\r\n                        />\r\n                    ))}\r\n                    <Panel />\r\n                </DragDropContext>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './store';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n\r\n"],"sourceRoot":""}